openapi: 3.0.0
info:
  version: 1.0.0
  title: SSJ-Estate API
  description: >-
    A restful web service for property owners to manage their real estate properties, the tenants , rent payment, maintenance expenses and reports.
  termsOfService: https://ssj-estate.com/terms-of-use
  contact:
    name: SSJ-Estate Office
    url: ssj-estate.com
    email: averko@ssj-estate.com
  license:
    name: SSJ-Estate License
    url: http://license.ssj-estate.com
    
  servers:
    - url: https//dev.ssj-estate.com/v1
      description: Dev Server
      
    - url: https://prod.ssj-estate.com/v1
      description: Prod Server
      
paths:
  /properties:
    post:
      summary: Add a new property to the portfolio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the property
                address:
                  type: string
                  description: Address of the property
      responses:
        201:
          description: Property added successfully
        400:
          description: Bad request
    put:
      summary: Edit an existing property in the portfolio
      parameters:
        - name: property_id
          in: path
          description: ID of the property to edit
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the property
                address:
                  type: string
                  description: Address of the property
      responses:
        200:
          description: Property edited successfully
        400:
          description: Bad request
        404:
          description: Property not found
    delete:
      summary: Delete a property from the portfolio
      parameters:
        - name: property_id
          in: path
          description: ID of the property to delete
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Property deleted successfully
        404:
          description: Property not found
  /tenants:
    post:
      summary: Add a new tenant to a property
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the tenant
                property_id:
                  type: integer
                  description: ID of the property to assign the tenant to
      responses:
        201:
          description: Tenant added successfully
        400:
          description: Bad request
    put:
      summary: Edit an existing tenant
      parameters:
        - name: tenant_id
          in: path
          description: ID of the tenant to edit
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the tenant
                property_id:
                  type: integer
                  description: ID of the property to assign the tenant to
      responses:
        200:
          description: Tenant edited successfully
        400:
          description: Bad request
        404:
          description: Tenant not found
    delete:
      description: Delete a tenant
      parameters:
        - name: tenant_id
          in: path
          description: ID of the tenant to delete
          required: true
          schema:
            type: string
      responses:
        204:
          description: Tenant successfully deleted
        404:
          description: Tenant not found
    /tenants/{tenantId}/properties/{propertyId}:
    put:
      description: Assign a tenant to a property
      parameters:
        - in: path
          name: tenantId
          description: ID of the tenant to assign
          required: true
          schema:
            type: string
        - in: path
          name: propertyId
          description: ID of the property to assign the tenant to
          required: true
          schema:
            type: string
      responses:
        200:
          description: Tenant successfully assigned to property
        404:
          description: Tenant or property not found
  /rents/{rentId}:
    put:
      description: Record a rent payment
      parameters:
        - in: path
          name: rentId
          description: ID of the rent payment
          required: true
          schema:
            type: string
      requestBody:
        description: Details of the rent payment
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentPayment'
      responses:
        200:
          description: Rent payment successfully recorded
        400:
          description: Invalid request body
        404:
          description: Rent payment not found
  /invoices:
    get:
      description: Generate a rent invoice
      parameters:
        - in: query
          name: tenantId
          description: ID of the tenant to generate the invoice for
          required: true
          schema:
            type: string
        - in: query
          name: propertyId
          description: ID of the property the tenant is associated with
          required: true
          schema:
            type: string
      responses:
        200:
          description: Rent invoice successfully generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentInvoice'
        404:
          description: Tenant or property not found
  /reports:
    get:
      summary: Generate reports on properties, tenants, rent collections, and expenses
      description: Endpoint to retrieve reports on properties, tenants, rent collections, and expenses
      parameters:
        - name: type
          in: query
          description: Type of report to generate (properties, tenants, rent collections, expenses)
          required: true
          enum: [properties, tenants, rent collections, expenses]
        - name: start_date
          in: query
          description: Start date for the report period
          required: false
          type: string
        - name: end_date
          in: query
          description: End date for the report period
          required: false
          type: string
      responses:
        200:
          description: Report data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
